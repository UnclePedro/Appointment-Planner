{"ast":null,"code":"var _jsxFileName = \"/Users/peter/Documents/VS Code Files/240531 - Appointment Planner/src/containers/contactsPage/ContactsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\nimport { TileList } from \"../../components/tileList/TileList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactsPage = props => {\n  _s();\n  const [newName, setNewName] = useState(\"\");\n  const [newPhone, setNewPhone] = useState(\"\");\n  const [newEmail, setNewEmail] = useState(\"\");\n  const [duplicate, setDuplicate] = useState(false);\n\n  // Write function with useEffect to check if the current Name state matches a name in the Contacts array\n  const duplicateCheck = useEffect(() => {\n    if (props.contacts.some(savedContact => savedContact.name === newName)) {\n      setDuplicate(true);\n    }\n  }, [props.contacts, newName]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!duplicate) {\n      props.addContact({\n        name: newName,\n        phone: newPhone,\n        email: newEmail\n      });\n      setNewName(\"\");\n      setNewPhone(\"\");\n      setNewEmail(\"\");\n      console.log(\"sumbit triggered\");\n    } else window.alert(\"Contact with this name already exists.\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        handleSubmit: handleSubmit,\n        newName: newName,\n        setNewName: setNewName,\n        newPhone: newPhone,\n        setNewPhone: setNewPhone,\n        newEmail: newEmail,\n        setNewEmail: setNewEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TileList, {\n        contacts: props.contacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactsPage, \"5CQu08lR8ngj0iMm8J7N9eq6Ua8=\");\n_c = ContactsPage;\nvar _c;\n$RefreshReg$(_c, \"ContactsPage\");","map":{"version":3,"names":["React","useState","useEffect","ContactForm","TileList","jsxDEV","_jsxDEV","ContactsPage","props","_s","newName","setNewName","newPhone","setNewPhone","newEmail","setNewEmail","duplicate","setDuplicate","duplicateCheck","contacts","some","savedContact","name","handleSubmit","e","preventDefault","addContact","phone","email","console","log","window","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/peter/Documents/VS Code Files/240531 - Appointment Planner/src/containers/contactsPage/ContactsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const ContactsPage = (props) => {\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newPhone, setNewPhone] = useState(\"\");\r\n  const [newEmail, setNewEmail] = useState(\"\");\r\n  const [duplicate, setDuplicate] = useState(false);\r\n\r\n  // Write function with useEffect to check if the current Name state matches a name in the Contacts array\r\n  const duplicateCheck = useEffect(() => {\r\n    if (props.contacts.some((savedContact) => savedContact.name === newName)) {\r\n      setDuplicate(true);\r\n    }\r\n  }, [props.contacts, newName]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!duplicate) {\r\n      props.addContact({ name: newName, phone: newPhone, email: newEmail });\r\n      setNewName(\"\");\r\n      setNewPhone(\"\");\r\n      setNewEmail(\"\");\r\n      console.log(\"sumbit triggered\");\r\n    } else window.alert(\"Contact with this name already exists.\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2>\r\n        <ContactForm\r\n          handleSubmit={handleSubmit}\r\n          newName={newName}\r\n          setNewName={setNewName}\r\n          newPhone={newPhone}\r\n          setNewPhone={setNewPhone}\r\n          newEmail={newEmail}\r\n          setNewEmail={setNewEmail}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList contacts={props.contacts} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,SAASC,WAAW,QAAQ,0CAA0C;AACtE,SAASC,QAAQ,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAMiB,cAAc,GAAGhB,SAAS,CAAC,MAAM;IACrC,IAAIM,KAAK,CAACW,QAAQ,CAACC,IAAI,CAAEC,YAAY,IAAKA,YAAY,CAACC,IAAI,KAAKZ,OAAO,CAAC,EAAE;MACxEO,YAAY,CAAC,IAAI,CAAC;IACpB;EACF,CAAC,EAAE,CAACT,KAAK,CAACW,QAAQ,EAAET,OAAO,CAAC,CAAC;EAE7B,MAAMa,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAI,CAACT,SAAS,EAAE;MACdR,KAAK,CAACkB,UAAU,CAAC;QAAEJ,IAAI,EAAEZ,OAAO;QAAEiB,KAAK,EAAEf,QAAQ;QAAEgB,KAAK,EAAEd;MAAS,CAAC,CAAC;MACrEH,UAAU,CAAC,EAAE,CAAC;MACdE,WAAW,CAAC,EAAE,CAAC;MACfE,WAAW,CAAC,EAAE,CAAC;MACfc,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IACjC,CAAC,MAAMC,MAAM,CAACC,KAAK,CAAC,wCAAwC,CAAC;EAC/D,CAAC;EAED,oBACE1B,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,gBACE3B,OAAA;QAAA2B,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACpB/B,OAAA,CAACH,WAAW;QACVoB,YAAY,EAAEA,YAAa;QAC3Bb,OAAO,EAAEA,OAAQ;QACjBC,UAAU,EAAEA,UAAW;QACvBC,QAAQ,EAAEA,QAAS;QACnBC,WAAW,EAAEA,WAAY;QACzBC,QAAQ,EAAEA,QAAS;QACnBC,WAAW,EAAEA;MAAY;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACzB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACM,eACV/B,OAAA;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACN/B,OAAA;MAAA2B,QAAA,gBACE3B,OAAA;QAAA2B,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACjB/B,OAAA,CAACF,QAAQ;QAACe,QAAQ,EAAEX,KAAK,CAACW;MAAS;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC9B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACN;AAEV,CAAC;AAAC5B,EAAA,CA7CWF,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}